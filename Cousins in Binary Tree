/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isCousins(TreeNode* root, int x, int y) {
        queue<TreeNode*>q;
        
        if(!root)
            return false;
        q.push(root);
        while(!q.empty()){
            bool pre_x=false;
            bool pre_y=false;
            
            int level=q.size();
            for(int i=0;i<level;++i)
            {
                TreeNode* curr=q.front();
                q.pop();
                if(curr->val==x)
                    pre_x=true;
                
                if(curr->val==y)
                    pre_y=true;
                
                if(curr->left && curr->right)
                {
                    if(curr->left->val==x && curr->right->val==y)
                        return false;
                    
                    if(curr->right->val==x && curr->left->val==y)
                        return false;
                }
                if(curr->left)
                    q.push(curr->left);
                
                if(curr->right)
                    q.push(curr->right);
            }
            if(pre_x && pre_y)
                return true;
            
            if(pre_x || pre_y)
                return false;
        }
        return false;
    }
};
